{
  "consumer": {
    "name": "Fabric8AuthGeneralConsumer"
  },
  "provider": {
    "name": "Fabric8Auth"
  },
  "interactions": [
    {
      "description": "A request to get status",
      "providerState": "Auth service is up and running.",
      "request": {
        "method": "GET",
        "path": "/api/status",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/vnd.status+json"
        },
        "body": {
          "buildTime": "2018-10-05T10:03:04Z",
          "commit": "0f9921980549b2baeb43f6f16cbe794f430f498c",
          "configurationStatus": "OK",
          "databaseStatus": "OK",
          "startTime": "2018-10-09T15:04:50Z"
        },
        "matchingRules": {
          "$.body.buildTime": {
            "match": "type"
          },
          "$.body.commit": {
            "match": "type"
          },
          "$.body.configurationStatus": {
            "match": "type"
          },
          "$.body.databaseStatus": {
            "match": "type"
          },
          "$.body.startTime": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "A request to get user's information by username",
      "providerState": "User with a given username exists.",
      "request": {
        "method": "GET",
        "path": "/api/users",
        "query": "filter[username]=testuser00000000",
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.query.filter[username][0]": {
            "match": "regex",
            "regex": "[a-zA-Z\\-0-9]+"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/vnd.api+json"
        },
        "body": {
          "data": [
            {
              "attributes": {
                "bio": "n/a",
                "cluster": "openshift.developer.osio/",
                "company": "n/a",
                "created-at": "2018-03-16T14:34:31.615511Z",
                "email": "developer@email.com",
                "emailPrivate": true,
                "emailVerified": true,
                "featureLevel": "internal",
                "fullName": "Osio Developer",
                "identityID": "00000000-0000-4000-a000-000000000000",
                "imageURL": "n/a",
                "providerType": "kc",
                "registrationCompleted": true,
                "updated-at": "2018-05-30T11:05:23.513612Z",
                "url": "n/a",
                "userID": "5f41b66e-6f84-42b3-ab5f-8d9ef21149b1",
                "username": "developer"
              },
              "id": "00000000-0000-4000-a000-000000000000",
              "links": {
                "related": "http://localhost:8089/api/users/00000000-0000-4000-a000-000000000000",
                "self": "http://localhost:8089/api/users/00000000-0000-4000-a000-000000000000"
              },
              "type": "identities"
            }
          ]
        },
        "matchingRules": {
          "$.body.data": {
            "min": 1
          },
          "$.body.data[*].*": {
            "match": "type"
          },
          "$.body.data[*].attributes.bio": {
            "match": "regex",
            "regex": "^[ a-zA-Z0-9,\\\\.\\/]*$"
          },
          "$.body.data[*].attributes.cluster": {
            "match": "type"
          },
          "$.body.data[*].attributes.company": {
            "match": "regex",
            "regex": "^[ a-zA-Z0-9,\\\\.\\/]*$"
          },
          "$.body.data[*].attributes.created-at": {
            "match": "type"
          },
          "$.body.data[*].attributes.email": {
            "match": "type"
          },
          "$.body.data[*].attributes.emailPrivate": {
            "match": "type"
          },
          "$.body.data[*].attributes.emailVerified": {
            "match": "type"
          },
          "$.body.data[*].attributes.featureLevel": {
            "match": "type"
          },
          "$.body.data[*].attributes.fullName": {
            "match": "type"
          },
          "$.body.data[*].attributes.identityID": {
            "match": "type"
          },
          "$.body.data[*].attributes.imageURL": {
            "match": "type"
          },
          "$.body.data[*].attributes.providerType": {
            "match": "type"
          },
          "$.body.data[*].attributes.registrationCompleted": {
            "match": "type"
          },
          "$.body.data[*].attributes.updated-at": {
            "match": "type"
          },
          "$.body.data[*].attributes.url": {
            "match": "type"
          },
          "$.body.data[*].attributes.userID": {
            "match": "type"
          },
          "$.body.data[*].attributes.username": {
            "match": "type"
          },
          "$.body.data[*].id": {
            "match": "type"
          },
          "$.body.data[*].links.related": {
            "match": "type"
          },
          "$.body.data[*].links.self": {
            "match": "type"
          },
          "$.body.data[*].type": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "A request to get user's information by ID",
      "providerState": "User with a given ID exists.",
      "request": {
        "method": "GET",
        "path": "/api/users/00000000-0000-4000-a000-000000000000",
        "headers": {
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.path": {
            "match": "regex",
            "regex": "\\/api\\/users\\/[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[8|9|aA|bB][a-fA-F0-9]{3}-[a-fA-F0-9]{12}"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/vnd.api+json"
        },
        "body": {
          "data": {
            "attributes": {
              "bio": "n/a",
              "cluster": "openshift.developer.osio/",
              "company": "n/a",
              "created-at": "2018-03-16T14:34:31.615511Z",
              "email": "developer@email.com",
              "emailPrivate": true,
              "emailVerified": true,
              "featureLevel": "internal",
              "fullName": "Osio Developer",
              "identityID": "00000000-0000-4000-a000-000000000000",
              "imageURL": "n/a",
              "providerType": "kc",
              "registrationCompleted": true,
              "updated-at": "2018-05-30T11:05:23.513612Z",
              "url": "n/a",
              "userID": "5f41b66e-6f84-42b3-ab5f-8d9ef21149b1",
              "username": "developer"
            },
            "id": "00000000-0000-4000-a000-000000000000",
            "links": {
              "related": "http://localhost:8089/api/users/00000000-0000-4000-a000-000000000000",
              "self": "http://localhost:8089/api/users/00000000-0000-4000-a000-000000000000"
            },
            "type": "identities"
          }
        },
        "matchingRules": {
          "$.body.data.attributes.bio": {
            "match": "regex",
            "regex": "^[ a-zA-Z0-9,\\\\.\\/]*$"
          },
          "$.body.data.attributes.cluster": {
            "match": "type"
          },
          "$.body.data.attributes.company": {
            "match": "regex",
            "regex": "^[ a-zA-Z0-9,\\\\.\\/]*$"
          },
          "$.body.data.attributes.created-at": {
            "match": "type"
          },
          "$.body.data.attributes.email": {
            "match": "type"
          },
          "$.body.data.attributes.emailPrivate": {
            "match": "type"
          },
          "$.body.data.attributes.emailVerified": {
            "match": "type"
          },
          "$.body.data.attributes.featureLevel": {
            "match": "type"
          },
          "$.body.data.attributes.fullName": {
            "match": "type"
          },
          "$.body.data.attributes.identityID": {
            "match": "type"
          },
          "$.body.data.attributes.imageURL": {
            "match": "type"
          },
          "$.body.data.attributes.providerType": {
            "match": "type"
          },
          "$.body.data.attributes.registrationCompleted": {
            "match": "type"
          },
          "$.body.data.attributes.updated-at": {
            "match": "type"
          },
          "$.body.data.attributes.url": {
            "match": "type"
          },
          "$.body.data.attributes.userID": {
            "match": "type"
          },
          "$.body.data.attributes.username": {
            "match": "type"
          },
          "$.body.data.id": {
            "match": "type"
          },
          "$.body.data.links.related": {
            "match": "type"
          },
          "$.body.data.links.self": {
            "match": "type"
          },
          "$.body.data.type": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "A request to get user's information with valid auth token ",
      "providerState": "A user exists with the given valid token.",
      "request": {
        "method": "GET",
        "path": "/api/user",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAiLCJ0eXAiOiJKV1QifXNvbWVyYW5kb21ieXRlcw",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.headers.Authorization": {
            "match": "regex",
            "regex": "^Bearer [a-zA-Z0-9\\-_]+?\\.?[a-zA-Z0-9\\-_]+?\\.?([a-zA-Z0-9\\-_]+)?$"
          }
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/vnd.api+json"
        },
        "body": {
          "data": {
            "attributes": {
              "bio": "n/a",
              "cluster": "openshift.developer.osio/",
              "company": "n/a",
              "created-at": "2018-03-16T14:34:31.615511Z",
              "email": "developer@email.com",
              "emailPrivate": true,
              "emailVerified": true,
              "featureLevel": "internal",
              "fullName": "Osio Developer",
              "identityID": "00000000-0000-4000-a000-000000000000",
              "imageURL": "n/a",
              "providerType": "kc",
              "registrationCompleted": true,
              "updated-at": "2018-05-30T11:05:23.513612Z",
              "url": "n/a",
              "userID": "5f41b66e-6f84-42b3-ab5f-8d9ef21149b1",
              "username": "developer"
            },
            "id": "00000000-0000-4000-a000-000000000000",
            "links": {
              "related": "http://localhost:8089/api/users/00000000-0000-4000-a000-000000000000",
              "self": "http://localhost:8089/api/users/00000000-0000-4000-a000-000000000000"
            },
            "type": "identities"
          }
        },
        "matchingRules": {
          "$.body.data.attributes.bio": {
            "match": "regex",
            "regex": "^[ a-zA-Z0-9,\\\\.\\/]*$"
          },
          "$.body.data.attributes.cluster": {
            "match": "type"
          },
          "$.body.data.attributes.company": {
            "match": "regex",
            "regex": "^[ a-zA-Z0-9,\\\\.\\/]*$"
          },
          "$.body.data.attributes.created-at": {
            "match": "type"
          },
          "$.body.data.attributes.email": {
            "match": "type"
          },
          "$.body.data.attributes.emailPrivate": {
            "match": "type"
          },
          "$.body.data.attributes.emailVerified": {
            "match": "type"
          },
          "$.body.data.attributes.featureLevel": {
            "match": "type"
          },
          "$.body.data.attributes.fullName": {
            "match": "type"
          },
          "$.body.data.attributes.identityID": {
            "match": "type"
          },
          "$.body.data.attributes.imageURL": {
            "match": "type"
          },
          "$.body.data.attributes.providerType": {
            "match": "type"
          },
          "$.body.data.attributes.registrationCompleted": {
            "match": "type"
          },
          "$.body.data.attributes.updated-at": {
            "match": "type"
          },
          "$.body.data.attributes.url": {
            "match": "type"
          },
          "$.body.data.attributes.userID": {
            "match": "type"
          },
          "$.body.data.attributes.username": {
            "match": "type"
          },
          "$.body.data.id": {
            "match": "type"
          },
          "$.body.data.links.related": {
            "match": "type"
          },
          "$.body.data.links.self": {
            "match": "type"
          },
          "$.body.data.type": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "A request to get public keys",
      "providerState": "Auth service is up and running.",
      "request": {
        "method": "GET",
        "path": "/api/token/keys",
        "headers": {
          "Accept": "application/json"
        }
      },
      "response": {
        "status": 200,
        "headers": {
          "Content-Type": "application/vnd.publickeys+json"
        },
        "body": {
          "keys": [
            {
              "alg": "RS256",
              "e": "AQAB",
              "kid": "abcdefghijklmnopqrstuvwxyz-0123456789_ABCDE",
              "kty": "RSA",
              "n": "abcdefghijklmnopqrstuvwxyz-0123456789_ABCDE",
              "use": "sig"
            }
          ]
        },
        "matchingRules": {
          "$.body.keys": {
            "min": 1
          },
          "$.body.keys[*].*": {
            "match": "type"
          },
          "$.body.keys[*].alg": {
            "match": "type"
          },
          "$.body.keys[*].e": {
            "match": "type"
          },
          "$.body.keys[*].kid": {
            "match": "regex",
            "regex": "^[a-zA-Z0-9_-]{43}$"
          },
          "$.body.keys[*].kty": {
            "match": "type"
          },
          "$.body.keys[*].n": {
            "match": "regex",
            "regex": "^[a-zA-Z0-9_-]+"
          },
          "$.body.keys[*].use": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "A request to get user's information with invalid auth token ",
      "providerState": "No user exists with the given token valid.",
      "request": {
        "method": "GET",
        "path": "/api/user",
        "headers": {
          "Authorization": "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEiLCJ0eXAiOiJKV1QifXNvbWVyYW5kb21ieXRlcw",
          "Content-Type": "application/json"
        },
        "matchingRules": {
          "$.headers.Authorization": {
            "match": "regex",
            "regex": "^Bearer [a-zA-Z0-9\\-_]+?\\.?[a-zA-Z0-9\\-_]+?\\.?([a-zA-Z0-9\\-_]+)?$"
          }
        }
      },
      "response": {
        "status": 401,
        "headers": {
          "Content-Type": "application/vnd.api+json"
        },
        "body": {
          "errors": [
            {
              "code": "token_validation_failed",
              "detail": "token is invalid",
              "id": "76J0ww+6",
              "status": "401",
              "title": "Unauthorized"
            }
          ]
        },
        "matchingRules": {
          "$.body.errors": {
            "min": 1
          },
          "$.body.errors[*].*": {
            "match": "type"
          },
          "$.body.errors[*].code": {
            "match": "type"
          },
          "$.body.errors[*].detail": {
            "match": "type"
          },
          "$.body.errors[*].id": {
            "match": "type"
          },
          "$.body.errors[*].status": {
            "match": "type"
          },
          "$.body.errors[*].title": {
            "match": "type"
          }
        }
      }
    },
    {
      "description": "A request to get user's information with no auth token ",
      "providerState": "Any user exists but no auth token was provided.",
      "request": {
        "method": "GET",
        "path": "/api/user",
        "headers": {
          "Content-Type": "application/json"
        }
      },
      "response": {
        "status": 401,
        "headers": {
          "Content-Type": "application/vnd.api+json"
        },
        "body": {
          "errors": [
            {
              "code": "jwt_security_error",
              "detail": "missing header \"Authorization\"",
              "id": "FRzHbogQ",
              "status": "401",
              "title": "Unauthorized"
            }
          ]
        },
        "matchingRules": {
          "$.body.errors": {
            "min": 1
          },
          "$.body.errors[*].*": {
            "match": "type"
          },
          "$.body.errors[*].code": {
            "match": "type"
          },
          "$.body.errors[*].detail": {
            "match": "type"
          },
          "$.body.errors[*].id": {
            "match": "type"
          },
          "$.body.errors[*].status": {
            "match": "type"
          },
          "$.body.errors[*].title": {
            "match": "type"
          }
        }
      }
    }
  ],
  "metadata": {
    "pactSpecification": {
      "version": "2.0.0"
    }
  }
}