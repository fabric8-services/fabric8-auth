// Code generated by goagen v1.2.0, DO NOT EDIT.
//
// API "wit": named_work_items Resource Client
//
// Command:
// $ goagen
// --design=github.com/fabric8-services/fabric8-wit/design
// --notool=true
// --out=$(GOPATH)/src/github.com/fabric8-services/fabric8-auth/wit
// --pkg=witservice
// --version=v1.2.0

package witservice

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
	"strconv"
)

// ShowNamedWorkItemsPath computes a request path to the show action of named_work_items.
func ShowNamedWorkItemsPath(userName string, spaceName string, wiNumber int) string {
	param0 := userName
	param1 := spaceName
	param2 := strconv.Itoa(wiNumber)

	return fmt.Sprintf("/api/namedspaces/%s/%s/workitems/%s", param0, param1, param2)
}

// Retrieve a work item from the given number.
func (c *Client) ShowNamedWorkItems(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewShowNamedWorkItemsRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewShowNamedWorkItemsRequest create the request corresponding to the show action endpoint of the named_work_items resource.
func (c *Client) NewShowNamedWorkItemsRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
