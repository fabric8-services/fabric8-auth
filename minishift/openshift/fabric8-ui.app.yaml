apiVersion: v1
kind: Template
parameters:
- name: IMAGE
  value: quay.io/openshiftio/fabric8-ui-fabric8-ui
- name: IMAGE_TAG
  value: latest
- name: FABRIC8_WIT_API_URL
  required: true
- name: FABRIC8_AUTH_API_URL
  required: true
- name: FABRIC8_REALM
  required: true
- name: FABRIC8_FORGE_URL
  required: true
- name: PROXY_PASS_URL
  required: true
- name: SERVICE_NAME
  required: true
  value: f8ui
- name: ENVIRONMENT
  value: dev
- name: MEMORY_LIMIT
  required: true
  value: 1.5Gi
metadata:
  name: ${SERVICE_NAME}
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    generation: 1
    labels:
      service: ${SERVICE_NAME}
      env: ${ENVIRONMENT}
      belongsto: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      service: ${SERVICE_NAME}
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: ${SERVICE_NAME}
      spec:
        containers:
        - image: ${IMAGE}:${IMAGE_TAG}
          name: ${SERVICE_NAME}
          ports:
          - containerPort: 80
            protocol: TCP
          env:
          - name: FABRIC8_WIT_API_URL
            value: ${FABRIC8_WIT_API_URL}
          - name: FABRIC8_AUTH_API_URL
            value: ${FABRIC8_AUTH_API_URL}
          - name: FABRIC8_REALM
            value: ${FABRIC8_REALM}
          - name: FABRIC8_FORGE_URL
            value: ${FABRIC8_FORGE_URL}
          - name: PROXY_PASS_URL
            value: ${PROXY_PASS_URL}
          resources: {}
          terminationMessagePath: /dev/termination-log
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 0.1m
              memory: 10Mi
            limits:
              cpu: 400m
              memory: ${MEMORY_LIMIT}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: ${SERVICE_NAME}
      belongsTo: ${SERVICE_NAME}
    name: ${SERVICE_NAME}
  spec:
    ports:
    - name: "8080"
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: ${SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      service: ${SERVICE_NAME}
      belongsTo: ${SERVICE_NAME}
      env: ${ENVIRONMENT}
    name: f8ui
  spec:
    host: ''
    port:
      targetPort: "8080"
    to:
      kind: Service
      name: ${SERVICE_NAME}
      weight: 100
    wildcardPolicy: None
  status: {}
